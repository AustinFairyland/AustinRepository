#!/bin/bash
# File: start-postgresql-service
# Editor: PyCharm
# Author: Austin (From Chengdu.China) https://fairy.host
# HomePage: https://github.com/AustinFairyland
# OperatingSystem: Windows 11 Professional Workstation 23H2 Canary Channel
# CreatedTime: 12/22/2023

# Terminal output color
RESET_COLOR="\e[0m"
RED_COLOR="\e[31m"
GREEN_COLOR="\e[32m"

CONTAINER_NAME="postgresql-service"
DOCKER_VOLUME_DIR="/data/container/volume"
DOCKER_CONTRAINER_ENV="/data/container/env.d"
LOCAL_POSTGRESQL_DATA_PATH="${DOCKER_VOLUME_DIR}/${CONTAINER_NAME}/data"
CONTAINER_USER="$(id -u)"
CONTAINER_GROUP="$(id -g)"

check_directory() {
  local dir_path=$1
  if [ -d "$dir_path" ]; then
    return 0
  else
    echo -e "${GREEN_COLOR}Directory ${dir_path} does not exist, creating it${RESET_COLOR}"
    if mkdir -p "$dir_path"; then
      echo -e "${GREEN_COLOR}Directory ${dir_path} create success.${RESET_COLOR}"
      return 0
    else
      return 1
    fi
  fi
}

main() {
  if [ "$EUID" -ne 0 ]; then
    echo -e "${RED_COLOR}The script must be run as root or with sudo.${RESET_COLOR}"
    exit
  fi

  if [ "$SUDO_USER" = "root" ]; then
    echo -e "${RED_COLOR}Running as root, creating docker-run user and group...${RESET_COLOR}"
    useradd -M -N -s /sbin/nologin -g docker docker-run >>/dev/null
    usermod -aG docker docker-run
    usermod -aG docker "$SUDO_USER"
    CONTAINER_USER=$(id -u docker-run)
    CONTAINER_GROUP=$(id -g docker)
  else
    CONTAINER_USER=$(id -u "$SUDO_USER")
    CONTAINER_GROUP=$(id -g "$SUDO_USER")
  fi

  # Check if the directory is empty
  check_directory $LOCAL_POSTGRESQL_DATA_PATH

  echo -e "${GREEN_COLOR}Changing ownership of the $LOCAL_POSTGRESQL_DATA_PATH ...${RESET_COLOR}"
  if sudo chown -R "$CONTAINER_USER":"$CONTAINER_GROUP" $LOCAL_POSTGRESQL_DATA_PATH; then
    echo -e "${GREEN_COLOR}Ownership change success.${RESET_COLOR}"
  else
    echo -e "${RED_COLOR}Ownership change failed.${RESET_COLOR}"
    exit
  fi

  local docker_command=(
    "docker"
    "run"
    "-d"
    "--name" "$CONTAINER_NAME"
    "--network" "DockerCustomNet"
    "--ip" "173.1.10.2"
    "--user" "$CONTAINER_USER":"$CONTAINER_GROUP"
    "--privileged=true"
    "-e" "TZ=Asia/Shanghai"
    "-p" "51002:5432"
    "-v" "${LOCAL_POSTGRESQL_DATA_PATH}:/var/lib/postgresql/data"
    "--env-file" "${DOCKER_CONTRAINER_ENV}/postgres.env"
    "--restart" "always"
    "postgres:16.1"
  )

  if "${docker_command[@]}"; then
    echo -e "${GREEN_COLOR}PostgreSQL service started successfully.${RESET_COLOR}"
  else
    echo -e "${RED_COLOR}Failed to start PostgreSQL service.${RESET_COLOR}"
  fi

  docker logs -f "$CONTAINER_NAME"

}

main
