# -----------------------------
# PostgreSQL 16.1 配置文件
# -----------------------------
# @software: PyCharm
# @author: Lionel Johnson
# @contact: https://fairy.host
# @organization: https://github.com/FairylandFuture
# @since: 2024-06-22 13:40:00 UTC+8
# -----------------------------

# 数据库的数据文件路径
data_directory = '/var/lib/postgresql/data'

# server 运行的地址，'*' 为全部地址
listen_addresses = '*'

# 用于连接的端口
port = 5432

# 最大并发连接客户端的数量
max_connections = 200

# 共享缓冲区大小，这个值可以根据服务器的内存大小进行调整
shared_buffers = 1GB

# 数据库认为操作系统能为数据存储和索引用的缓存大小
effective_cache_size = 12GB

# 用于VACUUM,MATERIALIZED VIEW以及其他内部操作的内存
maintenance_work_mem = 2GB

# 用于排序和散列操作的内存大小
work_mem = 4MB

# 启用/关闭同步写入，建议设置为 on
fsync = on

# 数据库日志持久化方法
wal_sync_method = fsync

# 是否等待写入日志文件才能确认事务，取值可为on,remote_apply,remote_write,local,off。通常，取on可提高数据安全性，取off可以提高数据写入性能
synchronous_commit = on

# 指定 walwriter 进程进行两次写入间的等待时间
wal_writer_delay = 200ms

# WAL(Write Ahead Log)的详细级别
wal_level = logical

# 检查点写入时间间隔
checkpoint_timeout = 5min

# 控制自动保存点在检查点间隔内完成的百分比
checkpoint_completion_target = 0.9

# WAL缓冲区的大小
wal_buffers = 16MB

# 最大并发 wal sender 进程数
max_wal_senders = 4

# 使得从库可以读取数据
hot_standby = on

# 日志记录的 SQL 语句最小执行时间
log_min_duration_statement = 1s

# 自动 VACUUM 是否开启
autovacuum = on

# 记录 VACUUM 运行的时间
log_autovacuum_min_duration = 0

# 自动 VACUUM 运行的时间间隔
autovacuum_naptime = 1min

# 设置 PostgreSQL 日志输出的位置
log_destination = 'stderr,csvlog'

# 启用日志记录功能
logging_collector = on

# 日志文件存储的文件夹
log_directory = 'logs'

# 日志文件名称
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'

# 旧日志是否被截断
log_truncate_on_rotation = on

# 系统级别的并行进程数量
max_worker_processes = 4

# 并行查询过程中每个 gather 节点最多有多少 worker
max_parallel_workers_per_gather = 4

# 数据和时间的格式
datestyle = 'iso, mdy'

# 默认的本地化设置
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
